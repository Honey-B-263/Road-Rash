#include<iostream>
#include<conio.h>
#include<dos.h>
#include <windows.h>
#include <time.h>
#define SCREEN_WIDTH 90
#define SCREEN_HEIGHT 26
#define WIN_WIDTH 70
HANDLE console = GetStdHandle(STD_OUTPUT_HANDLE);
COORD CursorPosition;int diff=70;
void gotoxy(int x, int y){
	CursorPosition.X = x;
	CursorPosition.Y = y;
	SetConsoleCursorPosition(console, CursorPosition);
}
void setcursor(bool visible, DWORD size) {
	if(size == 0)
		size = 20;

	CONSOLE_CURSOR_INFO lpCursor;
	lpCursor.bVisible = visible;
	lpCursor.dwSize = size;
	SetConsoleCursorInfo(console,&lpCursor);
}
int carPos=WIN_WIDTH/2;
using namespace std;

class Car{
public:
    char car[4][4] = { ' ','±','±',' ',
					'±','±','±','±',
					' ','±','±',' ',
					'±','±','±','±' };
void drawCar()
{
	for(int i=0; i<4; i++){
		for(int j=0; j<4; j++){
			gotoxy(j+carPos, i+22); cout<<car[i][j];
		}
	}
}
void eraseCar()
{
	for(int i=0; i<4; i++){
		for(int j=0; j<4; j++){
			gotoxy(j+carPos, i+22); cout<<" ";
		}
	}
}

};


class Enemy{
public:
    int enemyY[2];
    int enemyX[2];
    int enemyFlag[2];
void genEnemy(int ind)
{
	enemyX[ind] = 17 + rand()%(33);
}
void drawEnemy(int ind)
{
	if( enemyFlag[ind] == true )
    {
		gotoxy(enemyX[ind], enemyY[ind]);   cout<<"****";
		gotoxy(enemyX[ind], enemyY[ind]+1); cout<<" ** ";
		gotoxy(enemyX[ind], enemyY[ind]+2); cout<<"****";
		gotoxy(enemyX[ind], enemyY[ind]+3); cout<<" ** ";
	}
}
void eraseEnemy(int ind)
{
        if( enemyFlag[ind] == true )
        {
            gotoxy(enemyX[ind], enemyY[ind]); cout<<"    ";
            gotoxy(enemyX[ind], enemyY[ind]+1); cout<<"    ";
            gotoxy(enemyX[ind], enemyY[ind]+2); cout<<"    ";
            gotoxy(enemyX[ind], enemyY[ind]+3); cout<<"    ";
        }
}
void resetEnemy(int ind)
{
        eraseEnemy(ind);
        enemyY[ind] = 1;
        genEnemy(ind);
}
int collision()
{
	if( enemyY[0]+4 >= 23 ){
		if( enemyX[0] + 4 - carPos >= 0 && enemyX[0] + 4 - carPos < 9  ){
			return 1;
		}
	}
	else if(enemyY[1]+4 >= 23)
    {
        if( enemyX[1] + 4 - carPos >= 0 && enemyX[1] + 4 - carPos < 9  ){
			return 1;
		}
    }
	return 0;
}
};







class ScreenDisplay{
public:
void drawBorder()
{
	for(int i=0; i<SCREEN_HEIGHT; i++)
    {
        for(int j=0; j<17; j++)
        {
			gotoxy(0+j,i); cout<<"±";
			gotoxy(WIN_WIDTH-j,i); cout<<"±";
		}
	}
	for(int i=0; i<SCREEN_HEIGHT; i++)
    {
		gotoxy(SCREEN_WIDTH,i); cout<<"±";
	}
}
};
class GameInfo{
public:
    int score = 0;
    int level=1;
void gameover()
{
    while(1)
    {
	system("cls");
	cout<<endl;
	cout<<"\t\t--------------------------"<<endl;
	cout<<"\t\t-------- Game Over -------"<<endl;
	cout<<"\t\t--------------------------"<<endl<<endl;
	cout<<"\t\tYour score is : "<<score<<endl<<endl;
	cout<<"\t\tPress 'Escape' to go back to menu.";
	char op=getche();
	if(op==27)
        return;
    }
}
void updateScore()
{
	gotoxy(WIN_WIDTH + 7, 5);cout<<"Score: "<<score<<endl;
	if(score%20==0&&diff>=20)
            {
                diff=diff-10;
                level++;
                updateLevel();
            }
}
void updateLevel()
{
    gotoxy(WIN_WIDTH + 7, 8);cout<<"Level: "<<level<<endl;
}
void instructions()
{
	system("cls");
	cout<<"Instructions";
	cout<<"\n----------------";
	cout<<"\n Avoid Cars by moving left or right. ";
	cout<<"\n\n Press 'a' to move left";
	cout<<"\n Press 'd' to move right";
	cout<<"\n Press 'spacebar' to fire bullets.";
	cout<<"\n Press 'escape' to exit";
	cout<<"\n\nPress any key to go back to menu";
	getch();
}
};
class bullet :public Enemy,public GameInfo
{
public :
    int bulletX[50];
    int bulletY[50];
    int bulletflag[50];
    void setbullet()
    {
    for(int i=0;i<50;i++)
        {bulletX[i]=carPos;
        bulletY[i]=22;
        bulletflag[i]=0;
        }
    }

    void drawbullet(int ind)
    {
        gotoxy(bulletX[ind],bulletY[ind]);
        cout<<'|';
    }
    int genBullet()
    {
        for(int i=0;i<50;i++)
           {
         if(bulletflag[i]==0)
                return i;}
                return 0;
    }
    void erasebullet(int ind)
    {
        gotoxy(bulletX[ind],bulletY[ind]);
        cout<<" ";
    }
    void bulletcollision(int ind)
    {
        if(bulletX[ind]-enemyX[0]>=0&&bulletX[ind]-enemyX[0]<=3)
        {
            if(bulletY[ind]==enemyY[0]+3||bulletY[ind]==enemyY[0]+2)
            {
                resetEnemy(0);
                bulletflag[ind]=0;
                erasebullet(ind);
                score++;updateScore();

            }

        }
        else if(bulletX[ind]-enemyX[1]>=0&&bulletX[ind]-enemyX[1]<=3)
        {
            if(bulletY[ind]==enemyY[1]+3||bulletY[ind]==enemyY[1]+2)
            {
                resetEnemy(1);
                bulletflag[ind]=0;
                erasebullet(ind);
                score++;updateScore();

            }}}
};

class Game:public Car,public bullet,public ScreenDisplay
{
public:
    void play()
{
	carPos = -1 + WIN_WIDTH/2;
	score = 0;
	level=0;
	diff=70;
	enemyFlag[0] = 1;
	enemyFlag[1] = 0;
	enemyY[0] = enemyY[1] = 1;

	system("cls");
	system("color 57");
	drawBorder();
	setbullet();
	updateScore();
	updateLevel();
	genEnemy(0);
	genEnemy(1);

	gotoxy(WIN_WIDTH + 7, 2);cout<<"Car Game";
	gotoxy(WIN_WIDTH + 6, 4);cout<<"----------";
	gotoxy(WIN_WIDTH + 6, 6);cout<<"----------";
	gotoxy(WIN_WIDTH + 7, 12);cout<<"Control ";
	gotoxy(WIN_WIDTH + 7, 13);cout<<"-------- ";
	gotoxy(WIN_WIDTH + 2, 14);cout<<" A Key - Left";
	gotoxy(WIN_WIDTH + 2, 15);cout<<" D Key - Right";

	gotoxy(18, 5);cout<<"Press any key to start";
	getch();
	gotoxy(18, 5);cout<<"                      ";

	while(1)
    {
		if(kbhit())
        {
			char ch = getch();
			if( ch=='a' || ch=='A' )
			{
				if( carPos > 18 )
					carPos -= 4;
			}
			if( ch=='d' || ch=='D' )
			{
				if( carPos < 50 )
					carPos += 4;
			}

                if(ch==' ')
               {
                   int d=genBullet();
                   bulletflag[d]=1;
                   bulletX[d]=carPos;
                   int e=genBullet();
                   bulletflag[e]=1;
                   bulletX[e]=carPos+3;
               }


			if(ch==27){
				break;
			}
		}

		drawCar();
		for(int i=0;i<50;i++)
		{if(bulletflag[i]==1)
		drawbullet(i);}
		drawEnemy(0);
		drawEnemy(1);
		if(collision()== 1)
        {
			gameover();
			return;
		}
		for(int i=0;i<50;i++)
		bulletcollision(i);
		Sleep(diff);
		eraseCar();
		eraseEnemy(0);
		eraseEnemy(1);
		for(int i=0;i<50;i++)
		{if(bulletflag[i]==1)
		erasebullet(i);}


		if( enemyY[0] == 10 )
			if( enemyFlag[1] == 0 )
				enemyFlag[1] = 1;

		if( enemyFlag[0] == 1 )
			enemyY[0] += 1;

		if( enemyFlag[1] == 1 )
			enemyY[1] += 1;

		if( enemyY[0] > SCREEN_HEIGHT-4 )
        {
			resetEnemy(0);
			score++;
			updateScore();
		}
		if( enemyY[1] > SCREEN_HEIGHT-4 )
		{
			resetEnemy(1);
			score++;
			updateScore();
			}
			for(int i=0;i<50;i++)
			{
			    if(bulletY[i]>0&&bulletflag[i]==1)
            bulletY[i]--;
        else
           {
               erasebullet(i);bulletflag[i]=0;
               bulletY[i]=22;

           }
			}

		}
	}



};
int main()
{
    setcursor(0,0);
	srand( (unsigned)time(NULL));
    Game obj;
	do{
		system("cls");
		gotoxy(10,5); cout<<" -------------------------- ";
		gotoxy(10,6); cout<<" |        Car Game        | ";
		gotoxy(10,7); cout<<" --------------------------";
		gotoxy(40,7); cout<<"                     ___..............._";
		gotoxy(40,8);cout<<"             __.. ' _'.\"\"\"\"\"\"\\\\\"\"\"\"\"\"\"\"- .`-._";
		gotoxy(40,9);cout<<"______.-'         (_) |      \\\\           ` \\\\`-. _";
		gotoxy(40,10);cout<<"/_       --------------'-------\\\\---....______\\\\__`.`  -..___";
		gotoxy(40,11);cout<<"| T      _.----._           Xxx|x...           |          _.._`--. _";
		gotoxy(40,12);cout<<"| |    .' ..--.. `.         XXX|XXXXXXXXXxx==  |       .'.---..`.     -";
		gotoxy(40,13);cout<<"\\_j   /  /  __  \\  \\        XXX|XXXXXXXXXXX==  |      / /  __  \\ \\        `-";
		gotoxy(40,14);cout<<" _|  |  |  /  \\  |  |       XXX|\"\"'            |     / |  /  \\  | |          |";
		gotoxy(40,15);cout<<"|__\\_j  |  \\__/  |  L__________|_______________|_____j |  \\__/  | L__________J";
		gotoxy(40,16);cout<<"     `'\\ \\      / ./__________________________________\\ \\      / /___________\\\"\\";
		gotoxy(40,17);cout<<"        `.`----'.'                                   `.`----'.'             ";
		gotoxy(40,18);cout<<"          `\"\"\"\"'                                         `\"\"\"\"'                ";
		gotoxy(80,19); cout<<"Made By:";
        gotoxy(88,20); cout<<"Honey Baranwal";
        gotoxy(88,21); cout<<"Kritika Setia";
        gotoxy(88,22); cout<<"Mohil Chitransh";
		gotoxy(10,9); cout<<"Press 1 to Start Game";
		gotoxy(10,10); cout<<"Press 2 to see Instructions";
		gotoxy(10,11); cout<<"Press 3 to Quit";
		gotoxy(10,13); cout<<"Select option: ";
		char op = getche();

		if( op=='1') obj.play();
		else if( op=='2') obj.instructions();
		else if( op=='3')
        {
            gotoxy(10,23);cout<<"\n\n\n\t\t Thanks for playing.See you again ;)\n\n\n";
            exit(0);
        }

	}while(1);

    return 0;
}





